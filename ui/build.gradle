apply plugin: 'com.android.application'
apply plugin: 'com.jaredsburrows.spoon'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply from: '../.buildsystem/versioning.gradle'

android {


    defaultConfig {
        applicationId "com.rowland.delivery.merchant"
        compileSdkVersion 28
        minSdkVersion 19
        targetSdkVersion 28
        multiDexEnabled true
        versionCode getVersionCode()
        versionName getVersionName()
        vectorDrawables.useSupportLibrary = true
        testApplicationId 'com.rowland.delivery.merchant.test'
        testInstrumentationRunner 'com.github.tmurakami.dexopener.DexOpenerAndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        generateStubs = true
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.rowland.delivery.merchant.testing.OpenClass'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':rxgallery')
    implementation project(':shuffle')

    // Hexagonal modules
    implementation project(':modules:domain')
    implementation project(':modules:data')
    implementation project(':modules:presentation')
    implementation project(':modules:remote')
    implementation project(':modules:cache')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Android Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"
    // Firebase and Google services
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-firestore:18.0.0'
    implementation 'com.google.firebase:firebase-storage:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.1.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    //If you are using Firestore in your project
    implementation 'com.github.FrangSierra:RxFirebase:1.5.2'
    // Miscellaneous
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.github.florent37:glidepalette:2.1.2'
    implementation 'com.alexfacciorusso:daggerviewmodel:0.1.2'
    implementation 'com.github.abdularis:androidbuttonprogress:1.0.2'
    //implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'
    implementation project(':swipe-reveal-layout')
    implementation 'me.himanshusoni.quantityview:quantity-view:1.2.0'
    //implementation 'com.meetic.shuffle:shuffle:1.0.8'
    implementation 'com.meetic.dragueur:dragueur:1.0.3'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.github.dekoservidoni:omfm:1.1.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5'
    implementation 'com.github.etiennelenhart:eiffel:3.0.0'
    implementation 'com.github.ybq:Android-SpinKit:1.1.0'
    implementation 'com.jude:easyrecyclerview:4.4.2'
    // Dependency injection
    implementation 'com.google.dagger:dagger:2.17'
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    /// if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.17'
    kapt 'com.google.dagger:dagger-compiler:2.17'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:2.5.0'
    testImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'androidx.test:rules:1.1.1'
    testImplementation "org.mockito:mockito-core:2.24.0"
    testImplementation "org.mockito:mockito-inline:2.24.0"
    testImplementation('com.nhaarman:mockito-kotlin-kt1.1:1.5.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation "org.robolectric:robolectric:4.0"
    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    testImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.4'
    testAnnotationProcessor "com.google.dagger:dagger-compiler:2.17"

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation "org.mockito:mockito-android:2.24.0"
    androidTestImplementation 'com.github.tmurakami:dexopener:0.12.1'
    androidTestImplementation('com.nhaarman:mockito-kotlin-kt1.1:1.5.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1') {
        exclude group: 'javax.inject', module: 'javax.inject'
        exclude group: 'com.squareup', module: 'javawriter'
    }

    androidTestImplementation 'com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT' // For Spoon snapshot, until 2.0.0 is released
    androidTestImplementation 'com.github.tmurakami:dexopener:0.12.1'



    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.4'
}

apply plugin: 'com.google.gms.google-services'
